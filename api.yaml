openapi: 3.0.0
info:
  title: GTFS API of New York City
  description: An API for accessing GTFS data related to New York City's public transportation system.
  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000

paths:
  /:
    get:
      summary: Welcome message
      responses:
        '200':
          description: A welcome message.

  /routes:
    get:
      summary: Retrieve a list of all routes
      responses:
        '200':
          description: A list of routes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The route ID
                    name:
                      type: string
                      description: The route name

  /route/{route_id}:
    get:
      summary: Retrieve details of a specific route
      parameters:
        - name: route_id
          in: path
          required: true
          description: The ID of the route
          schema:
            type: string
      responses:
        '200':
          description: Details of the specified route
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  type:
                    type: integer

  /stops:
    get:
      summary: Retrieve a list of all stops
      responses:
        '200':
          description: A list of stops
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The stop ID
                    name:
                      type: string
                      description: The stop name

  /stop/{stop_id}:
    get:
      summary: Retrieve details of a specific stop
      parameters:
        - name: stop_id
          in: path
          required: true
          description: The ID of the stop
          schema:
            type: string
      responses:
        '200':
          description: Details of the specified stop
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string

  /trips:
    get:
      summary: Retrieve a list of all trips
      responses:
        '200':
          description: A list of trips
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The trip ID
                    route_id:
                      type: string
                      description: The associated route ID

  /trip/{trip_id}:
    get:
      summary: Retrieve details of a specific trip
      parameters:
        - name: trip_id
          in: path
          required: true
          description: The ID of the trip
          schema:
            type: string
      responses:
        '200':
          description: Details of the specified trip
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  route_id:
                    type: string

  /stop_times/trip/{trip_id}:
    get:
      summary: Retrieve stop times for a specific trip
      parameters:
        - name: trip_id
          in: path
          required: true
          description: The ID of the trip
          schema:
            type: string
      responses:
        '200':
          description: Stop times for the specified trip
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    stop_id:
                      type: string
                    arrival_time:
                      type: string
                    departure_time:
                      type: string

  /routes/search/{route_name}:
    get:
      summary: Search for routes by name
      parameters:
        - name: route_name
          in: path
          required: true
          description: The name of the route to search for
          schema:
            type: string
      responses:
        '200':
          description: A list of matching routes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string

  /routes_with_trips:
    get:
      summary: Retrieve trips associated with a specific route
      responses:
        '200':
          description: A list of trips associated with a route
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    route_id:
                      type: string
                    trip_id:
                      type: string

  /calendar_dates:
    get:
      summary: Retrieve a list of calendar dates
      responses:
        '200':
          description: A list of calendar dates
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    exception_type:
                      type: integer

  /api/route_stats:
    get:
      summary: Retrieve statistics for a specific route on a given date
      parameters:
        - name: date
          in: query
          required: true
          description: Date in YYYYMMDD format
          schema:
            type: string
      responses:
        '200':
          description: Statistics for the specified route
          content:
            application/json:
              schema:
                type: object

  /api/trip_stats:
    get:
      summary: Analyze trip duration and speed by time of day and period
      parameters:
        - name: date
          in: query
          required: true
          description: Date in YYYYMMDD format
          schema:
            type: string
      responses:
        '200':
          description: Analysis of trip statistics
          content:
            application/json:
              schema:
                type: object

  /api/frequent_routes:
    get:
      summary: Retrieve the most and least frequent routes on a given date
      parameters:
        - name: date
          in: query
          required: true
          description: Date in YYYYMMDD format
          schema:
            type: string
      responses:
        '200':
          description: Frequent routes data
          content:
            application/json:
              schema:
                type: object

  /api/shortest_longest_routes:
    get:
      summary: Retrieve the shortest and longest routes based on mean trip distance for a given date
      parameters:
        - name: date
          in: query
          required: true
          description: Date in YYYYMMDD format
          schema:
            type: string
      responses:
        '200':
          description: Shortest and longest routes data
          content:
            application/json:
              schema:
                type: object

  /api/slowest_fastest_routes:
    get:
      summary: Retrieve the slowest and fastest routes based on speed for a given date
      parameters:
        - name: date
          in: query
          required: true
          description: Date in YYYYMMDD format
          schema:
            type: string
      responses:
        '200':
          description: Slowest and fastest routes data
          content:
            application/json:
              schema:
                type: object
